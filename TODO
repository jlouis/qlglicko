* DONE Dialyzer warnings!
* DONE Overload Protection
* DONE Part of the tournament code has been written
* DONE Introduce dispcount as a tool.
* DONE When ranking tournaments, do not make processes that dies.
* DONE Tournament code misses pushbacks to the DB when ranking is done.
* DONE Fix the query for tournament players
  We should query for a player and always fetch his rating
  It fails because the second UNION is the one providing the solution,
  then we get the wrong result.
* TODO Make ranking single-threaded
  A single-threaded ranker is easier and what we need for this.
* Make ranking setup-based
  Rather than run the ranking from a database query all the time, we
  can as well pre-setup the most common queries so we can run them
  again and again in the system. This will allow us to run parallel
  annealed ranking faster by looking up data in the system directory.
* Enable HiPE for faster ranking
* DONE Get in more matches
* When storing raw matches, save when we pulled them.
  We are only going to run a tournament if all matches are
  solved. And all players are solved.

  Players are solved when all players have been pulled after the end
  tournament date. This gives a switch TIMESTAMP after which we know all
  relevant matches are in queue.

  We stamp each match with a provisional timestamp of when they have been added to the DB.
  When all matches less than the above switch TIMESTAMP has been fetched, we are ready to rank.

